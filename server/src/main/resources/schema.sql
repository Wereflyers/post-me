create table if not exists USERS
(
    USER_ID BIGINT generated by default as identity not null,
    NAME    VARCHAR(255) NOT NULL,
    EMAIL   VARCHAR(200) NOT NULL,
    constraint UQ_USER_NAME UNIQUE (NAME),
    constraint USERS_PK
        primary key (USER_ID)
);

create table if not exists FRIEND_REQUESTS
(
    REQUEST_ID                BIGINT generated by default as identity not null,
    USER_NAME  CHARACTER VARYING                              not null,
    SUB_NAME CHARACTER VARYING                              not null,
    STATUS            CHARACTER VARYING not null,
    constraint FRIEND_REQUESTS_PK
        primary key (REQUEST_ID),
    constraint FRIEND_REQUESTS_USERS_USER_ID_FK
        foreign key (USER_NAME) references USERS(NAME),
    constraint FRIEND_REQUESTS_USERS_USER_ID_FK_2
        foreign key (SUB_NAME) references USERS(NAME)
);

create table if not exists POSTS
(
    POST_ID            BIGINT generated by default as identity not null,
    TITLE         CHARACTER VARYING not null,
    DESCRIPTION   CHARACTER VARYING not null,
    CREATOR       CHARACTER VARYING            not null,
    PUBLISHED TIMESTAMP WITHOUT TIME ZONE        not null,
    constraint POSTS_PK
        primary key (POST_ID),
    constraint POSTS_USERS_USER_ID_FK
        foreign key (CREATOR) references USERS(NAME)
);

create table if not exists IMAGES
(
    IMAGE_ID  BIGINT generated by default as identity not null,
    NAME         CHARACTER VARYING not null,
    FILE_NAME   CHARACTER VARYING not null,
    SIZE         BIGINT not null,
    CONTENT_TYPE       CHARACTER VARYING            not null,
    BYTES bytea not null,
    FROM_POST bigint        not null,
    constraint IMAGES_PK
        primary key (IMAGE_ID),
    constraint POSTS_IMAGES_FK
        foreign key (FROM_POST) references POSTS
);