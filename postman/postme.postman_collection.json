{
	"info": {
		"_postman_id": "197649bf-32df-40af-9940-2f89be9edac0",
		"name": "postme",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24091428",
		"_collection_link": "https://dark-station-239005.postman.co/workspace/postme~3e3c6547-996e-48d2-b176-f6ad86c500dd/collection/24091428-197649bf-32df-40af-9940-2f89be9edac0?action=share&source=collection_link&creator=24091428"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Registration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"bob\",\r\n    \"password\": \"100\",\r\n    \"confirmPassword\": \"100\",\r\n    \"email\": \"user@user.com\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/registration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"registration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authentication",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"bob\",\r\n    \"password\": \"100\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/authentication",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authentication"
							]
						}
					},
					"response": []
				},
				{
					"name": "Registration Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"connor\",\r\n    \"password\": \"1\",\r\n    \"confirmPassword\": \"1\",\r\n    \"email\": \"user2@user.com\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/registration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"registration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authentication Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"connor\",\r\n    \"password\": \"1\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/authentication",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authentication"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "main service",
			"item": [
				{
					"name": "posts",
					"item": [
						{
							"name": "Create post id=1 Unauthorized",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([401]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\":\"Interesting post\",\r\n    \"description\":\"Really very interesting\",\r\n    \"images\": [\r\n        {\r\n            \"name\": \"picture\",\r\n            \"size\": \"1234\",\r\n            \"contentType\":\"jpeg\",\r\n            \"fileName\": \"file\",\r\n            \"bytes\": [\"10\"]\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create post id=1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											"pm.test(\"Test create post\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(1);\r",
											"    pm.expect(jsonData.title).to.eql('Interesting post');\r",
											"    pm.expect(jsonData.description).to.eql('Really very interesting');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{firstToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\":\"Interesting post\",\r\n    \"description\":\"Really very interesting\",\r\n    \"images\": [\r\n        {\r\n            \"name\": \"picture\",\r\n            \"size\": \"1234\",\r\n            \"contentType\":\"jpeg\",\r\n            \"fileName\": \"file\",\r\n            \"bytes\": [\"10\"]\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create post id=2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											"pm.test(\"Test create post\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(2);\r",
											"    pm.expect(jsonData.title).to.eql('Second post');\r",
											"    pm.expect(jsonData.description).to.eql('Smth about politics');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{firstToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\":\"Second post\",\r\n    \"description\":\"Smth about politics\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get post id=1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});\r",
											"pm.test(\"Test get post\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(1);\r",
											"    pm.expect(jsonData.title).to.eql('Interesting post');\r",
											"    pm.expect(jsonData.description).to.eql('Really very interesting');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{firstToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/posts/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all posts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});\r",
											"pm.test(\"Test get post\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData[0].id).to.eql(1);\r",
											"    pm.expect(jsonData[0].title).to.eql('Interesting post');\r",
											"    pm.expect(jsonData[0].description).to.eql('Really very interesting');\r",
											"});\r",
											"pm.test(\"Test get post\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData[1].id).to.eql(2);\r",
											"    pm.expect(jsonData[1].title).to.eql('Second post');\r",
											"    pm.expect(jsonData[1].description).to.eql('Smth about politics');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{firstToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/posts?from=0&size=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									],
									"query": [
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update post id=1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											"pm.test(\"Test update post\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(1);\r",
											"    pm.expect(jsonData.title).to.eql('Interesting post');\r",
											"    pm.expect(jsonData.description).to.eql('Not very interesting');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{firstToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\":\"Interesting post\",\r\n    \"description\":\"Not very interesting\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/posts/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete post id=2 with wrong id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{secToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "userId",
										"value": "2",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/posts/2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete post id=1 with images",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{firstToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/posts/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "friends",
					"item": [
						{
							"name": "Create friend request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											"pm.test(\"Test create request\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(1);\r",
											"    pm.expect(jsonData.status).to.eql('WAITING');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{firstToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests/connor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"connor"
									]
								}
							},
							"response": []
						},
						{
							"name": "Apply friend request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											"pm.test(\"Test apply request\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(1);\r",
											"    pm.expect(jsonData.status).to.eql('ACCEPTED');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{secToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests/1/apply",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"1",
										"apply"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel friend request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{secToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests/2/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"2",
										"cancel"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Post by followed",
					"item": [
						{
							"name": "Get all posts followed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});\r",
											"pm.test(\"Test post 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData[0].id).to.eql(2);\r",
											"    pm.expect(jsonData[0].title).to.eql('Second post');\r",
											"    pm.expect(jsonData[0].description).to.eql('Smth about politics');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{secToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/posts/sub?from=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										"sub"
									],
									"query": [
										{
											"key": "from",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unsub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{firstToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/requests/connor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"requests",
										"connor"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all posts followed Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});\r",
											"pm.test(\"Test posts\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).empty;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{firstToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/posts/sub?from=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										"sub"
									],
									"query": [
										{
											"key": "from",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "firstToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "secToken",
			"value": "",
			"type": "string"
		}
	]
}